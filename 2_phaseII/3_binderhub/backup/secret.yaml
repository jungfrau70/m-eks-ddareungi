BinderHub:
  registry:
    username: "alphatics"
    password: "2020@jupyteronline"

config:
  auth_enabled: true
  BinderHub:
    use_registry: true
    image_prefix: alphatics/binder-prod-
    hub_url: https://hub.jupyteronline.com
    log_level: 10

jupyterhub:
  proxy:
    secretToken: "26c631d417eee1b831a07387dc74ea8af12ab12dfa3ed08cab3e5d541f7bcdc1"
  singleuser:
    # to make notebook servers aware of hub
    #cmd: jupyterhub-singleuser
    cpu:
      limit: 8
      guarantee: 4
    memory:
      limit: 8G
      guarantee: 4M
    storage:
      dynamic:
        storageClass: nfs-client
    image:
      name: jupyter/datascience-notebook
      tag: 2343e33dec46
    profileList:
      - display_name: "Datascience environment"
        description: "If you want the additional bells and whistles: Python, R, and Julia."
        default: true
      - display_name: "Teaching environment"
        description: "Lab, Classroom, or Business"
        kubespawner_override:
          image: pupster90/io:latest
          lifecycle_hooks:
            postStart:
              exec:
                command: ["sh","-c","rm -rf Welcome_to_io_Hub && git clone https://github.com/pupster90/Welcome_to_io_Hub.git"]
      - display_name: "Tensorflow 1.11 environment"
        description: "If you want the additional bells and whistles: Tensorflow and Keras machine learning libraries."
        kubespawner_override:
          image: jupyter/tensorflow-notebook:2343e33dec46
      - display_name: "Pyspark environment"
        description: "The Jupyter Stacks spark image!"
        kubespawner_override:
          image: jupyter/pyspark-notebook:2343e33dec46

  hub:
    redirectToServer: false
    services:
      binder:
        apiToken: "89ae2b4e9966985b982d6bf805ed008ef824bb127b5c44c44d72296a69ee47bd"
    #cookieSecret: "5eb53f6818f742d8c62b535f0a6df54880e7039be0a9ae255436d95f4c661c29"
    extraEnv:
      OAUTH2_AUTHORIZE_URL: https://keycloak.jupyteronline.com/auth/realms/master/protocol/openid-connect/auth
      OAUTH2_TOKEN_URL: https://keycloak.jupyteronline.com/auth/realms/master/protocol/openid-connect/token
      OAUTH_CALLBACK_URL: https://hub.jupyteronline.com/hub/oauth_callback
    db:
      type: postgres
      upgrade: true
      password: "@postgres"
      url: "postgresql+psycopg2://jupyterhub@hub-postgres-postgresql/jupyterhub"
      pvc:
        storageClassName: nfs-client
    extraConfig:
      jupyterlab: |
        c.Authenticator.auto_login = True
        c.Spawner.default_url ='/lab'
        c.Spawner.cmd = ['jupyter-labhub']
      hub: |
        c.JupyterHub.tornado_settings = {
          'headers': {
            'Content-Security-Policy': "base-uri 'self'"
          },
        }
      spawner: >-
        c.Spawner.args = ["--NotebookApp.tornado_settings={ \
          'headers':{                                    \
            'Content-Security-Policy': \"base-uri 'self' \", \
          }, \
        }"]

  auth:
    type: custom
    custom:
      className: oauthenticator.generic.GenericOAuthenticator
      config:
        login_service: "keycloak"
        client_id: "jhub"
        client_secret: "3dc690ab-2a24-4d05-91d6-4aff2accc878"
        token_url: https://keycloak.jupyteronline.com/auth/realms/master/protocol/openid-connect/token
        userdata_url: https://keycloak.jupyteronline.com/auth/realms/master/protocol/openid-connect/userinfo
        userdata_method: GET
        userdata_params: {'state': 'state'}
        username_key: preferred_username
