---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: docker-registry
  name: docker-registry-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    #nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/cluster-issuer: letsencrypt-prod-nginx
    ingress.kubernetes.io/ssl-redirect: "true"
    #ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: "2048m"
    nginx.ingress.kubernetes.io/proxy-body-size: "2048m"
    nginx.ingress.kubernetes.io/client-max-body-size: "2048m"
spec:
  tls:
  # Replace the placeholder with your domain name (e.g. ingress.dev.blog.shoot.canary.k8s-hana.ondemand.com)
  - hosts:
    - docker.jupyteronline.com
    secretName: nginx-docker-registry-prod-secret
  rules:
    # Replace the placeholder with your domain name (e.g. ingress.dev.blog.shoot.canary.k8s-hana.ondemand.com)
    - host: docker.jupyteronline.com
      http:
        paths:
          - path: /
            backend:
              serviceName: docker-registry
              servicePort: 5000
